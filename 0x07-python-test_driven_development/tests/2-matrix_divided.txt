How to divide a matrix by a divisor
=====================================

Usage
======

``matrix_divided(...)`` returns a new matrix

>>> matrix = [
    ...     [1, 2, 3],
    ...     [4, 5, 6]
    ... ]

>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'num'

>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

>>> print(matrix_divided(matrix, None))
Traceback (most recent call last):
    ...
TypeError: div must be a number
	
print(matrix_divided(matrix, "10"))
Traceback (most recent call last):
    ...
TypeError: div must be a number


>>> matrix = [
    ...     [1, 2, 3, 4],
    ...     [5, 6, 7]
    ... ]

>>> print(matrix_divided(matrix, 7))
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size
	
>>> matrix = [
    ...     [1, 2, 3],
    ...     [5, "6", 7]
    ... ]
>>> print(matrix_divided(matrix, 4))
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [1, 2, 3]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = None
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = []
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
